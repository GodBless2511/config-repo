version: '3.2.0'
services:
  consul:
    image: consul:latest
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    volumes:
      - /opt/consul:/consul/config
    command: [ "agent", "-server", "-bootstrap-expect=1", "-ui", "-bind=0.0.0.0", "-client=0.0.0.0" ]
    networks:
      - microservices-network

  vault:
    image: vault:latest
    ports:
      - "8200:8200"
    depends_on:
      - consul
    environment:
      VAULT_ADDR: https://vault:8200
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8200","tls_disable":"0", "tls_cert_file":"/opt/vault/certificate.pem", "tls_key_file":"/opt/vault/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}'
      VAULT_DEV_ROOT_TOKEN_ID: d+QjDvYB9ys7+/BfOV1RdTHqg0LeSvurmpu6n4ZyWlw=
      VAULT_TOKEN: hvs.JlliRG1MqI86QdEFOYafFGmP
    cap_add:
      - IPC_LOCK
    volumes:
      - /opt/vault:/vault/config
    command: [ "server", "-dev", "-dev-root-token-id=d+QjDvYB9ys7+/BfOV1RdTHqg0LeSvurmpu6n4ZyWlw=" ]
    networks:
      - microservices-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=my-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 2+2Font4
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    volumes:
      - ~/volumes/postgresql/:/var/lib/postgresql/data/
    restart: always
    ports:
      - "5432:5432"
      - "5432:10001"
      - "5432:10002"
      - "5432:10003"
      - "5432:10004"
    networks:
      - microservices-network

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 2+2Font4
      MYSQL_USER: admin
      MYSQL_PASSWORD: 2+2Font4
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    volumes:
      - ~/volumes/mysql/:/var/lib/mysql/data/
    restart: always
    ports:
      - "3306:3306"
      - "3306:10001"
      - "3306:10002"
      - "3306:10003"
    networks:
      - microservices-network

  config-service:
    build:
      context: .
      dockerfile: ../../config-service/Dockerfile
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/GodBless2511/config-repo.git
    ports:
      - "9000:9800"
    depends_on:
      - consul
      - vault
    networks:
      - microservices-network

  auth-service:
    build:
      context: .
      dockerfile: ../../auth-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:10001/auth-service
    ports:
      - "9000:9000"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - postgres
    networks:
      - microservices-network

  about-service:
    build:
      context: .
      dockerfile: ../../about-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: about-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:10001/about-service?useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    ports:
      - "9000:9001"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - mysql
    networks:
      - microservices-network

  career-service:
    build:
      context: .
      dockerfile: ../../career-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: career-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:10002/career-service
    ports:
      - "9000:9002"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - postgres
    networks:
      - microservices-network

  contact-service:
    build:
      context: .
      dockerfile: ../../contact-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: contact-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:10002/contact-service?useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    ports:
      - "9000:9003"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - mysql
    networks:
      - microservices-network

  home-service:
    build:
      context: .
      dockerfile: ../../home-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: home-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:10003/home-service?useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    ports:
      - "9000:9004"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - mysql
    networks:
      - microservices-network

  offers-service:
    build:
      context: .
      dockerfile: ../../offers-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: offers-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:10003/offers-service
    ports:
      - "9000:9005"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - postgres
    networks:
      - microservices-network

  partner-service:
    build:
      context: .
      dockerfile: ../../partner-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: partner-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:10004/partner-service
    ports:
      - "9000:9006"
    depends_on:
      - consul
      - vault
      - elasticsearch
      - rabbitmq
      - postgres
    networks:
      - microservices-network

  gateway-service:
    build:
      context: .
      dockerfile: ../../gateway-service/Dockerfile
    environment:
      SPRING_APPLICATION_NAME: gateway-service
      SPRING_CLOUD_CONFIG_URI: http://config-service:9800
    ports:
      - "9000:9999"
    depends_on:
      - consul
      - vault
      - auth-service
      - about-service
      - career-service
      - contact-service
      - home-service
      - offers-service
      - partner-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  esdata:
    driver: local